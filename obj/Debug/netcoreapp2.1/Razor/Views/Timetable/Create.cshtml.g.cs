#pragma checksum "D:\SP stuff\Web Development\kachoweded - Copy\Learner\TMS\Views\Timetable\Create.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7abef65ce8fb97b4017b6cbba1261853ca6ce0d8"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Timetable_Create), @"mvc.1.0.view", @"/Views/Timetable/Create.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Timetable/Create.cshtml", typeof(AspNetCore.Views_Timetable_Create))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\SP stuff\Web Development\kachoweded - Copy\Learner\TMS\Views\_ViewImports.cshtml"
using TMS;

#line default
#line hidden
#line 2 "D:\SP stuff\Web Development\kachoweded - Copy\Learner\TMS\Views\_ViewImports.cshtml"
using TMS.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7abef65ce8fb97b4017b6cbba1261853ca6ce0d8", @"/Views/Timetable/Create.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4b920ee378507dd0789e3303ed664c79361ef06d", @"/Views/_ViewImports.cshtml")]
    public class Views_Timetable_Create : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "3", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "4", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "5", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "6", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "7", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("dataForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/datepicker/datepicker.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/datepicker/datepicker.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/wickedpicker/wickedpicker.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/wickedpicker/wickedpicker.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 9227, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8eee95c843e74b98bfcf65df99db1b22", async() => {
                BeginContext(6, 861, true);
                WriteLiteral(@"
    <div class=""card"">
        <div class=""card-header stylish-color-dark white-text"">
            <h4 class=""one"" style=""padding-top:1.8%;"">Create Customer Account Timetable</h4>
            <div class=""card-body"">
                <div class=""row"">
                    <div class=""col-md-12"">
                        <div class=""float-right"">
                            <div class=""float-right"" id=""showTimeTable"">
                                <a class=""btn btn-primary"" id=""showTable"">
                                    Show existing timetable
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class=""card"">
            <div class=""card-body"" style=""padding:3% 6%"">
                ");
                EndContext();
                BeginContext(867, 3200, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b54636d6e67448aba7546e55a6acc587", async() => {
                    BeginContext(887, 352, true);
                    WriteLiteral(@"
                    <div class=""form-group col-md-12"">
                        <label for=""dayOfWeek"" class=""font-small font-weight-medium"">
                            Choose Day Of Week <a class="" d-inline"">*</a>
                        </label>
                        <select id=""dayOfWeek"" class=""form-control"">
                            ");
                    EndContext();
                    BeginContext(1239, 33, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5bda57a49adf40909300e56d65f1ac89", async() => {
                        BeginContext(1257, 6, true);
                        WriteLiteral("Monday");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(1272, 30, true);
                    WriteLiteral("\r\n                            ");
                    EndContext();
                    BeginContext(1302, 34, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "02a04aeeba8f455b9767dee6576878de", async() => {
                        BeginContext(1320, 7, true);
                        WriteLiteral("Tuesday");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(1336, 30, true);
                    WriteLiteral("\r\n                            ");
                    EndContext();
                    BeginContext(1366, 36, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b1823ad5b4cd4bb1aeb4bbe0022c3e4f", async() => {
                        BeginContext(1384, 9, true);
                        WriteLiteral("Wednesday");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(1402, 30, true);
                    WriteLiteral("\r\n                            ");
                    EndContext();
                    BeginContext(1432, 35, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6dcb37b72a3546c09b8b27ff58e7b43e", async() => {
                        BeginContext(1450, 8, true);
                        WriteLiteral("Thursday");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(1467, 30, true);
                    WriteLiteral("\r\n                            ");
                    EndContext();
                    BeginContext(1497, 33, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5ebdaff98a52423aac9fa39e884902fa", async() => {
                        BeginContext(1515, 6, true);
                        WriteLiteral("Friday");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(1530, 30, true);
                    WriteLiteral("\r\n                            ");
                    EndContext();
                    BeginContext(1560, 35, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7dcfdedb127c46e69ed5fe3872aab7f1", async() => {
                        BeginContext(1578, 8, true);
                        WriteLiteral("Saturday");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(1595, 30, true);
                    WriteLiteral("\r\n                            ");
                    EndContext();
                    BeginContext(1625, 33, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e2152f49418144c7bf13b21ee321633f", async() => {
                        BeginContext(1643, 6, true);
                        WriteLiteral("Sunday");
                        EndContext();
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_6.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(1658, 2402, true);
                    WriteLiteral(@"
                        </select>
                        <span></span>
                    </div>
                    <div class=""form-group col-md-12"">
                        <label for=""startTimeInput"" class=""font-small font-weight-medium"">
                            Pick a Start Time *
                        </label>
                        <input type=""time"" id=""startTimeInput1"" class=""form-control""
                               name=""startTimeInput"" placeholder=""dd/MM/YYYY"" required />
                        <p id=""msgStartTime""></p>
                    </div>
                    <div class=""form-group col-md-12"">
                        <label for=""endTimeInput"" class=""font-small font-weight-medium"">
                            Pick an End Time *
                        </label>
                        <input type=""time"" id=""endTimeInput1"" class=""form-control""
                               name=""endTimeInput"" placeholder=""dd/MM/YYYY"" required />
                        <p id=""m");
                    WriteLiteral(@"sgEndTime""></p>
                    </div>
                    <div class=""form-group col-md-12"">
                        <label for=""startDateInput"" class=""font-small font-weight-medium"">
                            Pick a Start Date *
                        </label>
                        <input type=""text"" id=""startDateInput"" class=""form-control""
                               data-toggle=""datepicker"" name=""startDateInput"" placeholder=""dd/MM/YYYY"" />
                        <p id=""msgStartDate""></p>
                    </div>
                    <div class=""form-group col-md-12"">
                        <label for=""endDateInput"" class=""font-small font-weight-medium"">
                            Pick an End Date *
                        </label>
                        <input type=""text"" id=""endDateInput"" class=""form-control""
                               data-toggle=""datepicker"" name=""endDateInput"" placeholder=""dd/MM/YYYY"" />
                        <p id=""msgEndDate""></p>
            ");
                    WriteLiteral(@"        </div>
                    <div class=""form-group col-md-12"">
                        <label for=""visiblityInput"" class=""font-small font-weight-medium"">
                            Visibility * <input type=""checkbox"" id=""visibilityInput"" name=""visiblity"" checked>
                        </label>
                    </div>
                ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(4067, 5153, true);
                WriteLiteral(@"
            </div>
            <div class=""modal-footer"">
                <div id=""backButton"">
                    <button type=""button"" class=""btn btn-secondary"">Back</button>
                </div>
                <button id=""createButton"" type=""button"" class=""btn btn-primary"">Create</button>
            </div>
        </div>
    </div>
    <div id=""floating"">
        <div class=""card"">
            <div>
                <button id=""closing"" style=""float:right""><i class=""fa fa-close""></i></button>
                <h4 id=""title"" class=""one"" style=""padding-top:1.8%; padding-left:1.8%"">
                    Existing Timetable for
                    <div id=""fixed"">
                        <input type=""checkbox"" id=""stickytable"" onclick=""terms_change(this)"" checked />Fixed to bottom
                    </div>
                </h4>
            </div>
            <table class=""table"">
                <thead>
                    <tr>
                        <th scope=""col"" style=""padding-l");
                WriteLiteral(@"eft:1.8%;"">Day</th>
                        <th scope=""col"">Start Time</th>
                        <th scope=""col"">End Time</th>
                        <th scope=""col"">Start Date</th>
                        <th scope=""col"">End Date</th>
                        <th scope=""col"">Visibility</th>

                    </tr>
                </thead>
                <tbody id=""dataTableBody""></tbody>
            </table>
        </div>
    </div>
    <div class=""modal fade"" id=""messageModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
        <div class=""modal-dialog"" role=""document"">
            <div class=""modal-content"">
                <div class=""card"">
                    <div class=""card-header stylish-color-dark white-text"">
                        <h4 class=""one"" style=""padding-top:1.8%;"">Failed to create record. Your account timetable is the same as the following existing record.</h4>
                    </div>
                    <div class=""fo");
                WriteLiteral(@"rm-group col-md-12"" style=""padding-top:2%"">
                        <div class=""form-group"" id=""showingMessage"">
                            <table class=""table"">
                                <thead>
                                    <tr>
                                        <th scope=""col"" style=""padding-left:1.8%;"">Day</th>
                                        <th scope=""col"">Start Time</th>
                                        <th scope=""col"">End Time</th>
                                        <th scope=""col"">Start Date</th>
                                        <th scope=""col"">End Date</th>
                                        <th scope=""col"">Visibility</th>

                                    </tr>
                                </thead>
                                <tbody id=""output""></tbody>
                            </table>
                        </div>
                    </div>
                    <div class=""modal-footer"">
                        <bu");
                WriteLiteral(@"tton type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class=""modal fade"" id=""overlapModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
        <div class=""modal-dialog"" role=""document"">
            <div class=""modal-content"">
                <div class=""card"">
                    <div class=""card-header stylish-color-dark white-text"">
                        <h4 class=""one"" style=""padding-top:1.8%;"">Are you sure? Your account timetable overlap the same as the following existing record.</h4>
                    </div>
                    <div class=""form-group col-md-12"" style=""padding-top:2%"">
                        <div class=""form-group"" id=""showingMessage"">
                            <table class=""table"">
                                <thead>
                                    <tr>
                                  ");
                WriteLiteral(@"      <th scope=""col"" style=""padding-left:1.8%;"">Day</th>
                                        <th scope=""col"">Start Time</th>
                                        <th scope=""col"">End Time</th>
                                        <th scope=""col"">Start Date</th>
                                        <th scope=""col"">End Date</th>
                                        <th scope=""col"">Visibility</th>
                                    </tr>
                                </thead>
                                <tbody id=""overlapoutput""></tbody>
                            </table>
                        </div>
                    </div>
                    <div class=""modal-footer"">
                        <button type=""button"" id=""createAny"" class=""btn btn-secondary"" onclick=""createAnyway()"">Create</button>
                        <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Close</button>
                    </div>
                </div>
            </d");
                WriteLiteral("iv>\r\n        </div>\r\n    </div>\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(9227, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("scripts", async() => {
                BeginContext(9246, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(9252, 68, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "40f38cc0c735421990fd64233f8f87a6", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(9320, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(9326, 58, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "145792596cde4de7a9ac792329a8259e", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(9384, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(9390, 72, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "8338acd96d4f4d829c7f04ac25f181b9", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(9462, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(9468, 58, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6456371d945b4863bd43e80b9cee60f6", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(9526, 20777, true);
                WriteLiteral(@"
    <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"">
    <style>
        #fixed {
            float: right;
            padding-right: 2%;
            font-size: 24px;
        }
    </style>
    <script>
        const ID = getIdFromAddressBar();
        function getIdFromAddressBar() {
            let urlArray = window.location.href.split('/');
            let id = urlArray[urlArray.length - 1];
            return id;
        }

        function terms_change() {
            var s;
            if (document.getElementById('stickytable').checked) {
                s = true;
            } else {
                s = false;
            }
            console.dir(s);
            if (s == false) {
                var el = document.getElementById(""floating"");
                el.style.position = ""sticky"";
                el.style.bottom = ""0"";
            }
            if (s == true) {
                var el = document.getEl");
                WriteLiteral(@"ementById(""floating"");
                el.style.position = ""unset"";
                el.style.bottom = ""0"";
            }
        }

        $(""#closing"").on('click', function () {
            var e3 = document.getElementById(""floating"");
            e3.style.display = ""none"";
        });

        $(""#showTable"").on('click', function () {
            var e4 = document.getElementById(""floating"");
            e4.style.display = ""block"";
        });

        (function ($, moment) {
            let pageSize = 10;
            loadData();

            function loadData() {
                $.ajax({
                    method: 'GET',
                    url: `/API/Timetable/GetCustomerAccountTimetablePageByPage/${ID}?page_number=1&per_page=${pageSize}`,
                    dataType: 'json',
                    async: true,
                    cache: false,
                }).done(function (data) {
                    //Obtain the maximum number of page information from the JSON data
      ");
                WriteLiteral(@"              let maximumNumberOfPages = data.last_page;
                    let numberOfRecords = data.total;
                    var link = ""/Timetable/ManageTimetable/"" + ID;
                    document.getElementById('backButton').innerHTML = '<a class=""btn btn-secondary"" href=""' + link + '""> Back</a>';
                    if (numberOfRecords > 0) {
                        renderData(data.records);
                    } else {
                        $('#dataTableBody').append($(`<tr class=""row m-0"">
                                                                                                    <td class=""col-md-11 text-center text-muted"">
                                                                                                    <h4>No records found.</h4></td></tr>`));
                    }//End of if else to either display rows of data or display 'none found' message
                });//End of ajax().done()
            }//loadData
            //Retrieve data from database then");
                WriteLiteral(@" tabulate them into a table
            function renderData(records) {
                $('#dataTableBody').html('');//Clear the <tbody> element first

                for (var index = 0; index < records.length; index++) {
                    //The for-loop code here begins building and inserting the cells<td> and rows<tr>
                    //into the <tbody> element. Note: Two rows are created during each pass of the loop.
                    let $cellElement = null;
                    let record = records[index];
                    let num = index + 1
                    //To load account name
                    if (num == 1) {
                        document.getElementById(""title"").innerHTML += record.customerName;
                        //document.getElementById(""customerAccountName"").innerHTML = ""Create Account Rate for "" + record.customerAccountName
                    }
                    //Start - Defining row element
                    let $rowElement = $('<tr></tr>');
      ");
                WriteLiteral(@"              //Defining cell element
                    $cellElement = $(`<td>${record.day}</td>`);
                    $rowElement.append($cellElement);
                    $cellElement = $(`<td>${moment(record.startDate).format('hh:mm A')}</td>`);
                    $rowElement.append($cellElement);
                    $cellElement = $(`<td>${moment(record.endDate).format('hh:mm A')}</td>`);
                    $rowElement.append($cellElement);
                    $cellElement = $(`<td>${moment(record.startDate).format('DD/MM/YYYY')}</td>`);
                    $rowElement.append($cellElement);
                    $cellElement = $(`<td>${moment(record.endDate).format('DD/MM/YYYY')}</td>`);
                    $rowElement.append($cellElement);
                    if (record.isVisible == true) {
                        $cellElement = $(`<td>&#x2713</td>`);
                        $rowElement.append($cellElement);
                    } else {
                        $cellElement = $(`<td>&#x2");
                WriteLiteral(@"717</td>`);
                        $rowElement.append($cellElement);
                    }

                    $('#dataTableBody').append($rowElement);

                }//end of for loop
            }//end of renderData function
            //Initialise datepicker
            $('[data-toggle=""datepicker""]').datepicker({ format: 'DD/MM/YYYY' });

            //Validate date format (done)
            $.validator.addMethod('validDate', function (value, element) {
                return this.optional(element) || moment(value, 'DD/MM/YYYY').isValid();
            }, 'Please enter a valid date in the format DD/MM/YYYY');


            $('#dataForm').validate({
                rules: {
                    startTimeInput1: {
                        required: true,
                        validTime: true
                    },
                    endtTimeInput1: {
                        required: true,
                    },
                    visiblityInput: {
                        r");
                WriteLiteral(@"equired: true
                    },
                    startDateInput: {
                        required: true,
                        validDate: true
                    },
                    endDateInput: {
                        required: true,
                        validDate: true,
                    }

                },
                messages: {
                    startTimeInput: {
                        required: 'Start time is required',
                    },
                    endTimeInput: {
                        required: 'End time is required',
                    },
                    visiblityInput: {
                        required: 'Visibilty is required',
                    },
                    startDateInput: {
                        required: 'Start Date is required'
                    },
                    endDateInput: {
                        required: 'End Date is required'
                    }
                }
            });

");
                WriteLiteral(@"            function WebFormData(inDayNum, inStartDateAndTime, inEndDateAndTime, inVisible) {
                this.dayNum = inDayNum;
                this.startDateAndTime = inStartDateAndTime;
                this.endDateAndTime = inEndDateAndTime;
                this.isVisible = inVisible;
            }
            //Create method to submit form with POST API method
            $('#createButton').on('click', function () {
                console.log($('#dataForm').valid());
                var y = null;
                if (document.getElementById('visibilityInput').checked) {
                    y = true;
                } else {
                    y = false;
                }
                var customer = $.ajax({
                    method: 'GET',
                    url: `/API/AccountRates/GetCustomerAccountRate/` + ID,
                    async: false,
                    success: function (data) {
                        let a = data;
                        return a;
         ");
                WriteLiteral(@"           }
                }).responseJSON;

                var trules = true;
                var irules = true;
                var drules = true;
                var edrules = true;
                var st = minFromMidnight($('#startTimeInput1').val());
                var et = minFromMidnight($('#endTimeInput1').val());
                if (st > et) {
                    document.getElementById(""msgStartTime"").innerHTML = ""Must before end time"";
                    trules = false;
                } else {
                    document.getElementById(""msgStartTime"").innerHTML = """";
                }

                var checkSInterval = $('#startTimeInput1').val().split("":"").pop();
                var checkEInterval = $('#endTimeInput1').val().split("":"").pop();
                if (checkSInterval != 0 && checkSInterval != 15 && checkSInterval != 30 && checkSInterval != 45) {
                    document.getElementById(""msgStartTime"").innerHTML = ""Only accept 15 minutes interval"";
       ");
                WriteLiteral(@"             irules = false;
                }
                if (checkEInterval != 0 && checkEInterval != 15 && checkEInterval != 30 && checkEInterval != 45) {
                    document.getElementById(""msgEndTime"").innerHTML = ""Only accept 15 minutes interval"";
                    irules = false;
                }

                //let sd = $('#startDateInput').val();
                //let ed = $('#endDateInput').val();

                var From = $('#startDateInput').val();
                var To = $('#endDateInput').val();
                var strSplitFrom = From.split('/');
                var myDateFrom = new Date();
                myDateFrom.setFullYear(strSplitFrom[2], strSplitFrom[1] - 1, strSplitFrom[0]);

                var strSplitTo = To.split('/')
                myDateTo = new Date();
                myDateTo.setFullYear(strSplitTo[2], strSplitTo[1] - 1, strSplitTo[0]);

                var start = moment(customer.effectiveStartDate).format('DD/MM/YYYY');
             ");
                WriteLiteral(@"   var end = moment(customer.effectiveEndDate).format('DD/MM/YYYY');
                var strSplitEFrom = start.split('/');
                var myEDateFrom = new Date();
                myEDateFrom.setFullYear(strSplitEFrom[2], strSplitEFrom[1] - 1, strSplitEFrom[0]);

                var strSplitFTo = end.split('/')
                myFDateTo = new Date();
                myFDateTo.setFullYear(strSplitFTo[2], strSplitFTo[1] - 1, strSplitFTo[0]);

                console.dir(myEDateFrom -1);
                if (myDateFrom < myEDateFrom-1) {
                    document.getElementById(""msgStartDate"").innerHTML = ""Cannot be earlier than effective start date"";
                    drules = false;
                }

                console.dir(end);
                if (myDateTo > myFDateTo) {
                    document.getElementById(""msgEndDate"").innerHTML = ""Cannot be later than effective end date"";
                    drules = false;
                }

                if (myDateFrom > myDat");
                WriteLiteral(@"eTo) {
                    document.getElementById(""msgEndDate"").innerHTML = ""End Date must greater than start date"";
                    edrules = false;
                    console.dir(""here"");
                }

                if (trules == true && irules == true && drules == true && edrules == true) {
                    document.getElementById(""msgStartDate"").innerHTML = """";
                    document.getElementById(""msgEndDate"").innerHTML = """";
                }


                if ($('#dataForm').valid() && trules == true && irules == true && drules == true && edrules == true) {

                    var x = document.getElementById('dayOfWeek').value;
                    let collectedDayNum = x;
                    let collectedStartDate = $('#startDateInput').val();
                    let collectedStartTime = $('#startTimeInput1').val();
                    let collectedEndDate = $('#endDateInput').val();
                    let collectedEndTime = $('#endTimeInput1').val();
   ");
                WriteLiteral(@"                 console.dir(y);
                    let collectedVisibility = y;
                    let scombine = collectedStartDate + "" "" + collectedStartTime;
                    let ecombine = collectedEndDate + "" "" + collectedEndTime;
                    let webFormData = new WebFormData(collectedDayNum, scombine, ecombine, collectedVisibility);
                    $.ajax({
                        type: 'POST',
                        url: '/API/Timetable/CreateNewAccountTimetable/' + ID,
                        contentType: 'application/x-www-form-urlencoded',
                        data: webFormData
                    }).done(function (data, textStatus, jqXHR) {
                        new Noty({
                            text: data.message,
                            theme: 'metroui',
                            layout: 'center',
                            type: 'success'
                        }).show();
                    }).fail(function (data, textStatus, jqXHR) {
     ");
                WriteLiteral(@"                   if (data.responseJSON.message == ""Identical"") {
                            identical(data.responseJSON.record);
                            $('#messageModal').modal(""show"");
                        } else if (data.responseJSON.message == ""Overlap"") {
                            overlap(data.responseJSON.record);
                            $('#overlapModal').modal(""show"");
                        }
                        //new Noty({
                        //    text: data.responseJSON.message,
                        //    theme: 'metroui',
                        //    layout: 'center',
                        //    timeout: 3000,
                        //    type: 'error'
                        //}).show();
                    });//end of ajax().done().fail();
                }
            });//end of $('#saveButton').on('click', function () {
            //Create method to submit form with POST API method
            $('#createAny').on('click', function () {
    ");
                WriteLiteral(@"            var y = null;
                if (document.getElementById('visibilityInput').checked) {
                    y = true;
                } else {
                    y = false;
                }
                var x = document.getElementById('dayOfWeek').value;
                let collectedDayNum = x;
                let collectedStartDate = $('#startDateInput').val();
                let collectedStartTime = $('#startTimeInput1').val();
                let collectedEndDate = $('#endDateInput').val();
                let collectedEndTime = $('#endTimeInput1').val();
                console.dir(y);
                let collectedVisibility = y;
                let scombine = collectedStartDate + "" "" + collectedStartTime;
                let ecombine = collectedEndDate + "" "" + collectedEndTime;
                let webFormData = new WebFormData(collectedDayNum, scombine, ecombine, collectedVisibility);
                $.ajax({
                    type: 'POST',
                    url: ");
                WriteLiteral(@"'/API/Timetable/CreateNewAccountTimetableAnyway/' + ID,
                    contentType: 'application/x-www-form-urlencoded',
                    data: webFormData
                }).done(function (data, textStatus, jqXHR) {
                    new Noty({
                        text: data.message,
                        theme: 'metroui',
                        layout: 'center',
                        type: 'success'
                    }).show();
                })
            });
            function identical(records) {
                $('#output').html('');//Clear the <tbody> element first

                //The for-loop code here begins building and inserting the cells<td> and rows<tr>
                //into the <tbody> element. Note: Two rows are created during each pass of the loop.
                let $cellElement = null;
                let day;
                if (records.day == 1) {
                    day = ""Monday""
                } else if (records.day == 2) {
          ");
                WriteLiteral(@"          day = ""Tuesday""
                } else if (records.day == 3) {
                    day = ""Wednesday""
                } else if (records.day == 4) {
                    day = ""Thursday""
                } else if (records.day == 5) {
                    day = ""Friday""
                } else if (records.day == 6) {
                    day = ""Saturday""
                } else if (records.day == 7) {
                    day = ""Sunday""
                }
                //Start - Defining row element
                let $rowElement = $('<tr></tr>');
                //Defining cell element
                $cellElement = $(`<td>${day}</td>`);
                $rowElement.append($cellElement);
                $cellElement = $(`<td>${moment(records.startDateTime).format('hh:mm A')}</td>`);
                $rowElement.append($cellElement);
                $cellElement = $(`<td>${moment(records.endDateTime).format('hh:mm A')}</td>`);
                $rowElement.append($cellElement);
          ");
                WriteLiteral(@"      $cellElement = $(`<td>${moment(records.startDateTime).format('DD/MM/YYYY')}</td>`);
                $rowElement.append($cellElement);
                $cellElement = $(`<td>${moment(records.endDateTime).format('DD/MM/YYYY')}</td>`);
                $rowElement.append($cellElement);
                if (records.visibility == true) {
                    $cellElement = $(`<td>&#x2713</td>`);
                    $rowElement.append($cellElement);
                } else {
                    $cellElement = $(`<td>&#x2717</td>`);
                    $rowElement.append($cellElement);
                }

                $('#output').append($rowElement);
            }//end of identical function

            function overlap(records) {
                $('#overlapoutput').html('');//Clear the <tbody> element first

                //The for-loop code here begins building and inserting the cells<td> and rows<tr>
                //into the <tbody> element. Note: Two rows are created during each pass o");
                WriteLiteral(@"f the loop.
                let $cellElement = null;
                let day;
                if (records.day == 1) {
                    day = ""Monday""
                } else if (records.day == 2) {
                    day = ""Tuesday""
                } else if (records.day == 3) {
                    day = ""Wednesday""
                } else if (records.day == 4) {
                    day = ""Thursday""
                } else if (records.day == 5) {
                    day = ""Friday""
                } else if (records.day == 6) {
                    day = ""Saturday""
                } else if (records.day == 7) {
                    day = ""Sunday""
                }
                //Start - Defining row element
                let $rowElement = $('<tr></tr>');
                //Defining cell element
                $cellElement = $(`<td>${day}</td>`);
                $rowElement.append($cellElement);
                $cellElement = $(`<td>${moment(records.startDateTime).format('hh:mm A')}</");
                WriteLiteral(@"td>`);
                $rowElement.append($cellElement);
                $cellElement = $(`<td>${moment(records.endDateTime).format('hh:mm A')}</td>`);
                $rowElement.append($cellElement);
                $cellElement = $(`<td>${moment(records.startDateTime).format('DD/MM/YYYY')}</td>`);
                $rowElement.append($cellElement);
                $cellElement = $(`<td>${moment(records.endDateTime).format('DD/MM/YYYY')}</td>`);
                $rowElement.append($cellElement);
                if (records.visibility == true) {
                    $cellElement = $(`<td>&#x2713</td>`);
                    $rowElement.append($cellElement);
                } else {
                    $cellElement = $(`<td>&#x2717</td>`);
                    $rowElement.append($cellElement);
                }

                $('#overlapoutput').append($rowElement);
            }//end of identical function
        })(jQuery, moment)/* end of IIFE */

        function minFromMidnight(tm) {
   ");
                WriteLiteral(@"         var ampm = tm.substr(-2)
            var clk = tm.substr(0, 5);
            var m = parseInt(clk.match(/\d+$/)[0], 10);
            var h = parseInt(clk.match(/^\d+/)[0], 10);
            h += (ampm.match(/pm/i)) ? 12 : 0;
            return h * 60 + m;
        }
    </script>

");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
