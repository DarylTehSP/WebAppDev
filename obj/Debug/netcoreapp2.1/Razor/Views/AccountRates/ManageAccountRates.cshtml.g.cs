#pragma checksum "D:\SP stuff\Web Development\kachoweded - Copy\Learner\TMS\Views\AccountRates\ManageAccountRates.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e9e2287e73b686e2c829bc0110adf26522e0f685"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_AccountRates_ManageAccountRates), @"mvc.1.0.view", @"/Views/AccountRates/ManageAccountRates.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/AccountRates/ManageAccountRates.cshtml", typeof(AspNetCore.Views_AccountRates_ManageAccountRates))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\SP stuff\Web Development\kachoweded - Copy\Learner\TMS\Views\_ViewImports.cshtml"
using TMS;

#line default
#line hidden
#line 2 "D:\SP stuff\Web Development\kachoweded - Copy\Learner\TMS\Views\_ViewImports.cshtml"
using TMS.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e9e2287e73b686e2c829bc0110adf26522e0f685", @"/Views/AccountRates/ManageAccountRates.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4b920ee378507dd0789e3303ed664c79361ef06d", @"/Views/_ViewImports.cshtml")]
    public class Views_AccountRates_ManageAccountRates : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "CustomerAccounts", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Index", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("editForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("createForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/datepicker/datepicker.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/datepicker/datepicker.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 8122, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0bf836da2af845f186a485fb98cede49", async() => {
                BeginContext(6, 140, true);
                WriteLiteral("\r\n    <nav aria-label=\"breadcrumb\">\r\n        <ol class=\"breadcrumb \">\r\n            <li class=\"breadcrumb-item font-small\">\r\n                ");
                EndContext();
                BeginContext(146, 64, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c0a34946ce384bf8b2e7b1e0eb4c57c6", async() => {
                    BeginContext(202, 4, true);
                    WriteLiteral("Home");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(210, 97, true);
                WriteLiteral("\r\n            </li>\r\n            <li class=\"breadcrumb-item font-small active\">\r\n                ");
                EndContext();
                BeginContext(307, 77, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2239bc8336444b0895f0e9e69e90fad3", async() => {
                    BeginContext(363, 17, true);
                    WriteLiteral("Manage Activities");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(384, 1789, true);
                WriteLiteral(@"
            </li>
            <li class=""breadcrumb-item font-small active"">Manage Activity Rates</li>
        </ol>
        <div class=""card-header elegant-color white-text"">
            <h4 id=""name"" class=""one"" style=""padding-top:1.5%;"">
            </h4>
            <div class=""card-body"">
                <div class=""row"">
                    <div class=""col-md-12"">
                        <div class=""float-right"">
                            <button id=""addButton"" type=""button"" class=""btn btn-elegant btn-outline-default btn-group-sm ml-auto"" data-toggle=""modal"" data-target=""#addModal"">+ Add</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </nav>
    <table class=""table"">
        <thead>
            <tr>
                <th scope=""col"">No.</th>
                <th scope=""col"">Rate per Hour</th>
                <th scope=""col"">Effective Start Date</th>
                <th scope=""col"">Effective End Date</");
                WriteLiteral(@"th>
                <th scope=""col""></th>
                <th scope=""col""></th>
                <th scope=""col""></th>

            </tr>
        </thead>
        <tbody id=""dataTableBody""></tbody>
    </table>

    <div class=""modal fade"" id=""editModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
        <div class=""modal-dialog"" role=""document"">
            <div class=""modal-content"">
                <div class=""card"">
                    <div class=""card-header stylish-color-dark white-text"">
                        <h4 class=""one"" style=""padding-top:1.8%;"">Edit Activity rate</h4>
                    </div>
                    <div class=""card-body"" style=""padding:3% 6%"">
                        ");
                EndContext();
                BeginContext(2173, 1591, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dc3f826e25f84b74a5b152760199db58", async() => {
                    BeginContext(2193, 1564, true);
                    WriteLiteral(@"
                            <div class=""form-group col-md-12"">
                                <label for=""accountNameInput"" class=""font-small font-weight-medium"">
                                    Enter rate per hour <a class="" d-inline"">*</a>
                                </label>
                                <input type=""text"" id=""accountRateInput"" name=""accountRateInput"" class=""form-control"" placeholder=""Enter Account Rate..."">
                                <span></span>
                            </div>
                            <div class=""form-group col-md-12"">
                                <label for=""startDateInput"" class=""font-small font-weight-medium"">
                                    Pick a Start Date *
                                </label>
                                <input type=""text"" id=""startDateInput"" class=""form-control""
                                       data-toggle=""datepicker"" name=""startDateInput"" placeholder=""dd/MM/YYYY"" />
                    ");
                    WriteLiteral(@"        </div>
                            <div class=""form-group col-md-12"">
                                <label for=""endDateInput"" class=""font-small font-weight-medium"">
                                    Pick an End Date *
                                </label>
                                <input type=""text"" id=""endDateInput"" class=""form-control""
                                       data-toggle=""datepicker"" name=""endDateInput"" placeholder=""dd/MM/YYYY"" />
                            </div>
                        ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(3764, 1022, true);
                WriteLiteral(@"
                    </div>
                    <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-elegant btn-outline-default btn-group-sm ml-auto"" data-dismiss=""modal"">Close</button>
                        <button id=""updateButton"" type=""button"" class=""btn btn-elegant btn-outline-default btn-group-sm ml-auto"">Update</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class=""modal fade"" id=""addModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
        <div class=""modal-dialog"" role=""document"">
            <div class=""modal-content"">
                <div class=""card"">
                    <div class=""card-header stylish-color-dark white-text"">
                        <h4 id=""customerAccountName"" class=""one"" style=""padding-top:1.8%;""></h4>
                    </div>
                    <div class=""card-body"" style=""padding:3% 6%"">
                        ");
                EndContext();
                BeginContext(4786, 1596, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8a5c7a9315034cd681856cff8ad296aa", async() => {
                    BeginContext(4808, 1567, true);
                    WriteLiteral(@"
                            <div class=""form-group col-md-12"">
                                <label for=""accountRateInput"" class=""font-small font-weight-medium"">
                                    Enter rate per hour <a class="" d-inline"">*</a>
                                </label>
                                <input type=""text"" id=""accountRateInput1"" name=""accountRateInput"" class=""form-control"" placeholder=""Enter Account Rate..."">
                                <span></span>
                            </div>
                            <div class=""form-group col-md-12"">
                                <label for=""startDateInput"" class=""font-small font-weight-medium"">
                                    Pick a Start Date *
                                </label>
                                <input type=""text"" id=""startDateInput1"" class=""form-control""
                                       data-toggle=""datepicker"" name=""startDateInput"" placeholder=""dd/MM/YYYY"" />
                  ");
                    WriteLiteral(@"          </div>
                            <div class=""form-group col-md-12"">
                                <label for=""endDateInput"" class=""font-small font-weight-medium"">
                                    Pick an End Date *
                                </label>
                                <input type=""text"" id=""endDateInput1"" class=""form-control""
                                       data-toggle=""datepicker"" name=""endDateInput"" placeholder=""dd/MM/YYYY"" />
                            </div>
                        ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(6382, 1412, true);
                WriteLiteral(@"
                    </div>
                    <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-elegant btn-outline-default btn-group-sm ml-auto"" data-dismiss=""modal"">Close</button>
                        <button id=""createButton"" type=""button"" class=""btn btn-elegant btn-outline-default btn-group-sm ml-auto"">Create</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class=""modal fade"" id=""deleteModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
            <div class=""modal-dialog"" role=""document"">
                <div class=""modal-content"">
                    <div class=""card"">
                        <div class=""card-header stylish-color-dark white-text"">
                            <h4 class=""one"" style=""padding-top:1.8%;"">Are you sure?</h4>
                        </div>
                        <div class=""form-group col-md-12"" style=""padding-top:2");
                WriteLiteral(@"%"">
                            <div class=""form-group"" id=""deleteMessage"">
                                This account rate will be deleted permanantly. Are you sure?
                            </div>
                        </div>
                        <div class=""modal-footer"">
                            <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal""");
                EndContext();
                BeginWriteAttribute("onclick", " onclick=\"", 7794, "\"", 7869, 3);
                WriteAttributeValue("", 7804, "location.href=\'", 7804, 15, true);
#line 135 "D:\SP stuff\Web Development\kachoweded - Copy\Learner\TMS\Views\AccountRates\ManageAccountRates.cshtml"
WriteAttributeValue("", 7819, Url.Action("ManageAccountRates", "AccountRates"), 7819, 49, false);

#line default
#line hidden
                WriteAttributeValue("", 7868, "\'", 7868, 1, true);
                EndWriteAttribute();
                BeginContext(7870, 245, true);
                WriteLiteral(">Close</button>\r\n                            <button id=\"deleteButton\" type=\"button\" class=\"btn btn-primary\">Yes</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(8122, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("scripts", async() => {
                BeginContext(8141, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(8147, 68, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "c46c66eac3094013a32bc0f533f205b0", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(8215, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(8221, 58, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "97ac0299909e4006a01807d32eb4018a", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(8279, 12073, true);
                WriteLiteral(@"
    <style>
    </style>
    <script>
        //To extract id from address bar
        const ID = getIdFromAddressBar();
            function getIdFromAddressBar() {
                let urlArray = window.location.href.split('/');
                let id = urlArray[urlArray.length - 1];
                return id;
            }
        (function ($, moment, window, document) {
            let pageSize = 10;
            loadData();
            //load data from the web api method
            function loadData() {

                $.ajax({
                    method: 'GET',
                    url: `/API/AccountRates/GetCustomerAccountRatesPageByPage/${ID}?page_number=1&per_page=${pageSize}`,
                    dataType: 'json',
                    async: true,
                    cache: false,
                }).done(function (data) {
                    //Obtain the maximum number of page information from the JSON data
                    //let maximumNumberOfPages = data.last_page;
  ");
                WriteLiteral(@"                  let numberOfRecords = data.total;
                    if (numberOfRecords > 0) {

                        renderData(data.records);

                    } else {
                        $('#dataTableBody').append($(`<tr class=""row m-0"">
                                    <td class=""col-md-11 text-center text-muted"">
                                    <h4>No records found.</h4></td></tr>`));
                    }//End of if else to either display rows of data or display 'none found' message
                });//End of ajax().done()
            }//loadData
            //Retrieve data from database then tabulate them into a table
            function renderData(records) {
                $('#dataTableBody').html('');//Clear the <tbody> element first

                for (var index = 0; index < records.length; index++) {
                    //The for-loop code here begins building and inserting the cells<td> and rows<tr>
                    //into the <tbody> element. Note: T");
                WriteLiteral(@"wo rows are created during each pass of the loop.
                    let $cellElement = null;
                    let record = records[index];
                    let num = index + 1
                    //To load account name
                    if (num == 1) {
                        document.getElementById(""name"").innerHTML = ""Activity Rates for "" + record.customerAccountName;
                        document.getElementById(""customerAccountName"").innerHTML = ""Create Account Rate for "" + record.customerAccountName;

                    }
                        //Start - Defining row element 
                        let $rowElement = $('<tr></tr>');
                        //Defining cell element
                        $cellElement = $(`<th scope=""row"">${num}</th>`);
                        $rowElement.append($cellElement);;
                        $cellElement = $(`<td>${record.accountRate}</td>`);
                        $rowElement.append($cellElement);
                        $cellElem");
                WriteLiteral(@"ent = $(`<td>${moment(record.effectiveStartDate).format('DD/MM/YYYY')}</td>`);
                        $rowElement.append($cellElement);
                        $cellElement = $(`<td>${moment(record.effectiveEndDate).format('DD/MM/YYYY')}</td>`);
                        $rowElement.append($cellElement);
                        $cellElement = $(`<td><button id=""editButton"" type=""button"" onclick=""retrieve(${record.accountRateId})"" class=""fas fa-edit btn btn-primary"" data-toggle=""modal"" data-target=""#editModal""></button></td>`);//end of append()
                        $rowElement.append($cellElement);
                        $cellElement = $(`<td><a href=""/Timetable/ManageTimetable/${record.accountRateId}""><button type=""button"" class=""btn btn-primary"" data-toggle=""modal"">Time Table</button></a></td>`);//end of append()
                        $rowElement.append($cellElement);
                        $cellElement = $(`<td><button type=""button"" onclick=""deleteAccount(${record.accountRateId})"" class=""fas f");
                WriteLiteral(@"a-trash-alt btn btn-danger"" data-toggle=""modal"" data-target=""#deleteModal""></button></td>`);//end of append()
                        $rowElement.append($cellElement);
                        $('#dataTableBody').append($rowElement);
                        //append the cell element to row element then to the table
                }//end of for loop
            }//end of renderData function
        }) ($, moment, window, window.document)

     //   function getId() {
     //       document.getElementById(""displayed"").innerHTML = responseHTML.innerHTML;;
     //   }
        function WebFormData(inAccountRate, inStartDate, inEndDate) {
            this.accountRate = inAccountRate;
            this.startDate = inStartDate;
            this.endDate = inEndDate;
        }
        //validate account rate (done)
        $.validator.addMethod('validAccountRate', function (value, element) {
            return this.optional(element) || value > 0 ;
        }, 'Please enter a value greater than or equal");
                WriteLiteral(@" to 0.');

        //validate account rate input (done)
        $.validator.addMethod('validAccountRateDecimal', function (value, element) {
            return this.optional(element) || (value > 0 && /^\d*(\.\d{0,2})?$/i.test(value));
        }, 'Please limit to two decimal place e.g.(10.85)');

        //Validate date format (done)
        $.validator.addMethod('validDate', function (value, element) {
            return this.optional(element) || moment(value, 'DD/MM/YYYY').isValid();
        }, 'Please enter a valid date in the format DD/MM/YYYY');

        //Validate end date
        $.validator.addMethod('validEndDate', function (value, element, params) {
           if (!/Invalid|NaN/.test(new Date(value))) {
                return new Date(value) >= new Date($(params).val());
            }
            return isNaN(value) && isNaN($(params).val())
                    || (Number(value) >= Number($(params).val()));
        }, 'Must be greater than start Date.');    

        //Set jquery ");
                WriteLiteral(@"validation rules
        $('#editForm').validate({
            rules: {
                accountRateInput: {
                    required: true,
                    validAccountRate: true,
                    validAccountRateDecimal: true
                },
                startDateInput: {
                    required: true,
                    validDate: true
                },
                endDateInput: {
                    required: true,
                    validDate: true,
                    validEndDate: ""#startDateInput"" 
                }
               
            },
            messages: {
                accounttRateInput: {
                    required: 'Account rate is required',
                },
                startDateInput: {
                    required: 'Start Date is required'
                },
                endDateInput: {
                    required: 'End Date is required'
                }
            }
        });

         //Set jquery valid");
                WriteLiteral(@"ation rules
        $('#createForm').validate({
            rules: {
                accountRateInput: {
                    required: true,
                    validAccountRate: true,
                    validAccountRateDecimal: true
                },
                startDateInput: {
                    required: true,
                    validDate: true
                },
                endDateInput: {
                    required: true,
                    validDate: true,
                    validEndDate: ""#startDateInput1"" 
                }
               
            },
            messages: {
                accounttRateInput: {
                    required: 'Account rate is required',
                },
                startDateInput: {
                    required: 'Start Date is required'
                },
                endDateInput: {
                    required: 'End Date is required'
                }
            }
        });

        //Create method to su");
                WriteLiteral(@"bmit form with POST API method
        $('#createButton').on('click', function () {
            let collectedAccountRate = $('#accountRateInput1').val();
            let collectedStartDate = $('#startDateInput1').val();
            let collectedEndDate = $('#endDateInput1').val();
            let webFormData = new WebFormData(collectedAccountRate, collectedStartDate, collectedEndDate);
            $.ajax({
                type: 'POST',
                url: '/API/AccountRates/CreateNewAccountRate/' + ID,
                contentType: 'application/x-www-form-urlencoded',
                data: webFormData
            }).done(function (data, textStatus, jqXHR) {
                new Noty({
                    text: data.message,
                    theme: 'metroui',
                    layout: 'center',
                    type: 'success'
                }).show();
            }).fail(function (data, textStatus, jqXHR) {
                new Noty({
                    text: data.responseJSON.mess");
                WriteLiteral(@"age,
                    theme: 'metroui',
                    layout: 'center',
                    timeout: 3000,
                    type: 'error'
                }).show();
            });//end of ajax().done().fail();
        });

        //To retrieve respective account rate 
        function retrieve(id) {
            $.ajax({
                method: 'GET',
                url: `/API/AccountRates/GetCustomerAccountRate/` + id,
                dataType: 'json',

            }).done(function (data) {
                console.log(data);
                let customer = data;

                let accountRate = customer.accountRate;
                let effectiveStartDate = customer.effectiveStartDate;
                let effectiveEndDate = customer.effectiveEndDate;
                //assign each value to a html component
                $('#accountRateInput').val(accountRate);
                $('#startDateInput').val(moment(effectiveStartDate).format('DD/MM/YYYY'));
                $(");
                WriteLiteral(@"'#endDateInput').val(moment(effectiveEndDate).format('DD/MM/YYYY'));
            });  
            //To update the account rate
            $('#updateButton').on('click', function () {
                let collectedAccountRate = $('#accountRateInput').val();
                let collectedStartDate = $('#startDateInput').val();
                let collectedEndDate = $('#endDateInput').val();

                let webFormData = new WebFormData(collectedAccountRate, collectedStartDate, collectedEndDate);
                
                $.ajax({
                    method: 'PUT',
                    url: `/API/AccountRates/UpdateAccountRates/` + id,
                    dataType: 'json',
                    contentType: 'application/x-www-form-urlencoded;',
                    data: webFormData
                }).done(function (data) {
                    new Noty({ text: data.message, type: 'success', layout: 'center' }).show();
                }).fail(function (data) {
                    new No");
                WriteLiteral(@"ty({
                        text: data.responseJSON.message, type: 'error', layout: 'center'
                    }).show();
                });
            });
        }
        //To delete an account rate
        function deleteAccount (id) {
            $('#deleteButton').on('click', function () {
                 $.ajax({
                     method: 'DELETE',
                     url: `/API/AccountRates/DeleteAccountRate/` + id
                 }).done(function (data) {
                     new Noty({ text: data.message, type: 'success', layout: 'center' }).show();
                 }).fail(function (data) {
                     new Noty({ text: data.responseJSON.message, type: 'error', layout: 'center' }).show();
                 });
             })
        }
    </script>
");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
