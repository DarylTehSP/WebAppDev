#pragma checksum "D:\SP stuff\Web Development\kachoweded - Copy\Learner\TMS\Views\InstructorHome\UpdateTimeSheetSchedule.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "64170392d818aa9814b5ee3f714023ae544e44f8"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_InstructorHome_UpdateTimeSheetSchedule), @"mvc.1.0.view", @"/Views/InstructorHome/UpdateTimeSheetSchedule.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/InstructorHome/UpdateTimeSheetSchedule.cshtml", typeof(AspNetCore.Views_InstructorHome_UpdateTimeSheetSchedule))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\SP stuff\Web Development\kachoweded - Copy\Learner\TMS\Views\_ViewImports.cshtml"
using TMS;

#line default
#line hidden
#line 2 "D:\SP stuff\Web Development\kachoweded - Copy\Learner\TMS\Views\_ViewImports.cshtml"
using TMS.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"64170392d818aa9814b5ee3f714023ae544e44f8", @"/Views/InstructorHome/UpdateTimeSheetSchedule.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4b920ee378507dd0789e3303ed664c79361ef06d", @"/Views/_ViewImports.cshtml")]
    public class Views_InstructorHome_UpdateTimeSheetSchedule : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Instructor", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Index", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("dataForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("autoComplete", new global::Microsoft.AspNetCore.Html.HtmlString("off"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/datepicker/datepicker.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/wickedpicker/wickedpicker.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/site.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/site.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/datatables/datatables.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/bootstrap-select/css/bootstrap-select.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/datatables/datatables.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/wickedpicker/wickedpicker.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/moment/moment.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/datepicker/datepicker.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/moment/datetime-moment.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/bootstrap-select/js/bootstrap-select.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/signature-pad/signature_pad.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(30, 116, true);
            WriteLiteral("\r\n\r\n\r\n\r\n<nav aria-label=\"breadcrumb\">\r\n    <ol class=\"breadcrumb \">\r\n        <li class=\"breadcrumb-item font-small\">");
            EndContext();
            BeginContext(146, 58, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7d90b6aef4a44cd4be8f51dd716612ab", async() => {
                BeginContext(196, 4, true);
                WriteLiteral("Home");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(204, 725, true);
            WriteLiteral(@"</li>
        <li class=""breadcrumb-item font-small""><a href=""##"" onClick=""history.go(-1); return false;"">Manage Timesheet</a></li>
        <li class=""breadcrumb-item font-small active"">Update Timesheet Schedule</li>
    </ol>
</nav>
<div class=""card"" style=""margin-bottom:200px"">
    <div class=""card-header stylish-color-dark white-text"">
        <div class=""container-fluid"">
            <div class=""row vertical-align"">
                <h4 class=""one"" style=""padding-top:1.8%;"">Update Timesheet Schedule <span id=""titleBox""></span></h4>
            </div>
        </div>
    </div>
    <div class=""card-body"" style=""padding:3% 6%"">
        <p class=""font-small float-right"">* indicates required fields</p>
");
            EndContext();
            BeginContext(954, 8, true);
            WriteLiteral("        ");
            EndContext();
            BeginContext(962, 4130, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b3fd73afecdd4b5c93f20befb3d1137e", async() => {
                BeginContext(1012, 50, true);
                WriteLiteral("\r\n            <div class=\"form-group col-md-12\">\r\n");
                EndContext();
                BeginContext(1092, 275, true);
                WriteLiteral(@"                <label for=""dateOfLessonBox"" class=""font-small font-weight-medium"" style=""padding-top:3%;"">Date of lesson</label><br />
                <span class=""text-left"" id=""dateOfLessonBox""></span>
            </div>
            <div class=""form-group col-md-12"">
");
                EndContext();
                BeginContext(1397, 276, true);
                WriteLiteral(@"                <label for=""dayInput"" class=""font-small font-weight-medium"" style=""padding-top:3%;"">Day of week</label><br />
                <span class=""text-left"" id=""dayBox""></span>
            </div>
            <hr />
            <div class=""form-group col-md-12"">
");
                EndContext();
                BeginContext(1712, 345, true);
                WriteLiteral(@"                <label for=""lessonTypeNamesInput"" class=""font-small font-weight-medium"" style=""padding-top:3%;"">Lesson types *</label><br />
                <select id=""lessonTypeNamesInput"" name=""lessonTypeNamesInput"" class=""col-md-6"" multiple></select>
            </div>
            <hr />
            <div class=""form-group col-md-12"">
");
                EndContext();
                BeginContext(2096, 284, true);
                WriteLiteral(@"                <label for=""serviceAmountChargeableBox"" class=""font-small font-weight-medium"">Service amount chargeable</label><br />
                <span class=""text-left"" id=""serviceAmountChargeableBox""></span>
            </div>
            <div class=""form-group col-md-12"">
");
                EndContext();
                BeginContext(2421, 266, true);
                WriteLiteral(@"                <label for=""officialStartTimeBox"" class=""font-small font-weight-medium"">Official Start Time</label><br />
                <span class=""text-left"" id=""officialStartTimeBox""></span>
            </div>
            <div class=""form-group col-md-12"">
");
                EndContext();
                BeginContext(2726, 365, true);
                WriteLiteral(@"                <label for=""actualStartTimeInput"" class=""font-small font-weight-medium"">Actual Start Time *</label><br />
                <input type=""text"" name=""actualStartTimeInput"" id=""actualStartTimeInput"" class=""timepicker custom-select form-control"" style=""font-size:initial"" required />
            </div>
            <div class=""form-group col-md-12"">
");
                EndContext();
                BeginContext(3132, 260, true);
                WriteLiteral(@"                <label for=""officialEndTimeBox"" class=""font-small font-weight-medium"">Official End Time</label><br />
                <span class=""text-left"" id=""officialEndTimeBox""></span>
            </div>
            <div class=""form-group col-md-12"">
");
                EndContext();
                BeginContext(3429, 596, true);
                WriteLiteral(@"                <label for=""actualEndTimeInput"" class=""font-small font-weight-medium"">Actual End Time *</label><br />
                <input type=""text"" name=""actualEndTimeInput"" id=""actualEndTimeInput"" class=""timepicker custom-select form-control"" style=""font-size:initial"" required />
            </div>
            <hr />
            <div class=""form-group col-md-12"">
                <canvas width=""500"" height=""400"" id=""signature""
                        style=""border:1px solid black""></canvas>
            </div>
            <hr />
            <div class=""form-group col-md-12"">
");
                EndContext();
                BeginContext(4064, 603, true);
                WriteLiteral(@"                <label class=""control-label font-weight-medium font-medium sans-serif""
                       for=""isReplacementInstructorToggleBtn"" style=""font-size:smaller;"">Is replacement instructor *</label>

                <label class=""bs-switch align-middle ml-3 "">
                    <input type=""checkbox"" id=""isReplacementInstructorToggleBtn"" checked>
                    <span class=""slider round""></span>
                </label>
            </div>
            <br />
            <div class=""form-group col-md-12"">
                <label class=""control-label col-md-1""></label>
");
                EndContext();
                BeginContext(4714, 371, true);
                WriteLiteral(@"                <div class=""float-right"">
                    <button type=""button"" id=""saveButton"" class=""btn btn-primary"">
                        Submit
                    </button>
                    <button type=""button"" class=""btn btn-light"" href=""##"" onClick=""history.go(-1); return false;"">Back</button>
                </div>
            </div>
        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("novalidate", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5092, 139, true);
            WriteLiteral("\r\n    </div><!-- end of div element which has the class=\"card-body\" -->\r\n</div><!-- end of the div element which has the class=\"card\" -->\r\n");
            EndContext();
            DefineSection("scripts", async() => {
                BeginContext(5248, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(5254, 68, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "1dc5785deea54d5b980f506ed7e895f2", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(5322, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(5328, 72, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2f496086d8a748b782d434b5f416d12c", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(5400, 8, true);
                WriteLiteral("\r\n\r\n    ");
                EndContext();
                BeginContext(5408, 51, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "233920c89fd84cb99b68037c2d873875", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(5459, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(5465, 61, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "097a83404b704665b868c5a259b4ed0d", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(5526, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(5532, 68, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "d63f9ba7740849d99598041b3629f164", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(5600, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(5606, 84, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "f3d32d2b2a2e446e8bf1af8a755f5cb4", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(5690, 8, true);
                WriteLiteral("\r\n\r\n    ");
                EndContext();
                BeginContext(5698, 58, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "94f2872e9352427db5b72ac439358db5", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(5756, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(5762, 58, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4b1491ff6aa440d1803d85c4e045ab11", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(5820, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(5826, 50, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e58e541dfe634bd3a86eb8bd309f1bff", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(5876, 8, true);
                WriteLiteral("\r\n\r\n    ");
                EndContext();
                BeginContext(5884, 58, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "75bba56ee0ea44e28e10ca1adba89980", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(5942, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(5948, 55, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "020222f99b1c4ca2bedf9bbf1ef64364", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(6003, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(6009, 73, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dcae8c7798094672a2d9ef2309805599", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(6082, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(6088, 64, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d6a1533dcda142739439c8d634610e0d", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(6152, 19060, true);
                WriteLiteral(@"
    <style>
        /*Set colours of error and valid messages on validation*/
        .error {
            color: red;
            font-size: small
        }
        .hidden{
           display:none;
        }
        .valid {
            color: green;
            font-size: small
        }

        body {
            margin-top: 30px;
        }

        .view{
            color:blue;
            font-weight:bold;
        }
        .positive-view {
            color: green;
            font-weight: bold;
        }
        .negative-view {
            color: red;
            font-weight: bold;
        }
    </style>
    <script>

        (function (window, $, moment) {

            $.when(loadLessonTypeNames()).then(loadTimeSheetSchedule);



            //Get timeSheetScheduleId from address bar
            let timeSheetScheduleId = getIdFromAddressBar();
            let isReplacementInstructor = false;

            function getIdFromAddressBar() {
               ");
                WriteLiteral(@" let urlArray = window.location.href.split('/');
                let id = urlArray[urlArray.length - 1];
                return id;
            };
            //Initialise signature pad
            let canvas = document.querySelector('#signature');
            let pad = new SignaturePad(canvas);

            //Initialise the toggle button for indicating is replacement instructor
            $(""#isReplacementInstructorToggleBtn"").on('change', function () {
                if ($(this).is(':checked')) {
                    //switchStatus = $(this).is(':checked');
                    isReplacementInstructor = $(this).is(':checked');
                    // alert(visibility);// To verify
                }
                else {
                    isReplacementInstructor = $(this).is(':checked');
                }
            });
            //Initialise start timepicker
            let $actualStartTimeInputElement = $('#actualStartTimeInput').wickedpicker({

                minutesInterval: 1");
                WriteLiteral(@"5, //Change interval for minutes to 15
            }).on('change', function () {
                $('.timepicker').valid();  // triggers a validation test
            });

            //Initialise end timepicker
            let $actualEndTimeInputElement = $('#actualEndTimeInput').wickedpicker({

                minutesInterval: 15, //Change interval for minutes to 15
            }).on('change', function () {
                $('.timepicker').valid();  // triggers a validation test for both timepickers
            });

            $('#actualStartTimeInput,#actualEndTimeInput').on('change', function () {
                let collectedActualStartTimeInMinutes = convertTimeToMinutes($('#actualStartTimeInput').val());
                let collectedActualEndTimeInMinutes = convertTimeToMinutes($('#actualEndTimeInput').val());
                let durationInMinutes = collectedActualEndTimeInMinutes - collectedActualStartTimeInMinutes;
                let chargeableAmount = (durationInMinutes / 60) * rat");
                WriteLiteral(@"ePerHour;
                $('#serviceAmountChargeableBox').text('$' + chargeableAmount);
            })

            let ratePerHour = 0;
            function loadTimeSheetSchedule() {
                //Load the timesheet schedule record details from backend.
                $loadTimeSheetScheduleHandler = jQuery.ajax({
                    type: 'GET',
                    url: '/API/TimeSheets/GetOneTimeSheetSchedule/' + timeSheetScheduleId,
                }).done(function (data, textStatus, jqXHR) {
                    console.log(data);
                    let schedule = data;
                    let accountName = schedule.customerAccountName;
                    //Using the minutesTo12HourHHMM to Format the incoming data from total minutes 
                    //from midnight to HH: MM AM / PM so that it can be readable to the user.
                    let officialStartTimeHHMM = minutesTo12HourHHMM(schedule.officialStartTimeInMinutes).toUpperCase();
                    let officialEndTim");
                WriteLiteral(@"eHHMM = minutesTo12HourHHMM(schedule.officialEndTimeInMinutes).toUpperCase();


                    let officialStartTimeInMinutes = schedule.officialStartTimeInMinutes;
                    let officialEndTimeInMinutes = schedule.officialEndTimeInMinutes;

                    let actualStartTimeInMinutes = schedule.actualStartTimeInMinutes;
                    let actualEndTimeInMinutes = schedule.actualEndTimeInMinutes;
                    let isSystemCreated = schedule.isSystemCreated;
                    let isReplacementInstructor = schedule.isReplacementInstructor;
                    let startTimeInMinutes = 0;
                    let endTimeInMinutes = 0;
                    let lessonTypeNames = schedule.lessonTypeNames;
                    ratePerHour = schedule.ratePerHour;
                    if (schedule.actualStartTimeInMinutes === null) {
                        actualStartTimeHHMM = schedule.officialStartTimeHHMM
                        startTimeInMinutes = schedule.officialStar");
                WriteLiteral(@"tTimeInMinutes
                    } else {
                        actualStartTimeHHMM = convertMinsToHrsMins(actualStartTimeInMinutes);
                        startTimeInMinutes = actualStartTimeInMinutes;
                    }
                    if (schedule.actualEndTimeInMinutes === null) {
                        actualEndTimeHHMM = schedule.officialEndTimeHHMM;
                        endTimeInMinutes = schedule.officialEndTimeInMinutes;
                    } else {
                        actualEndTimeHHMM = convertMinsToHrsMins(actualEndTimeInMinutes)
                        endTimeInMinutes = actualEndTimeInMinutes;
                    }
                    let weekDayName = dateToWeekDayName(schedule.dateOfLesson);


                    document.getElementById('titleBox').innerHTML = ""Update timesheet '"" + schedule.title + ""'"";
                    $('#dateOfLessonBox').html(moment(new Date(schedule.dateOfLesson)).format('DD/MM/YYYY'));
                    $('#officialStartTimeBox");
                WriteLiteral(@"').html(officialStartTimeHHMM);
                    $('#officialEndTimeBox').html(officialEndTimeHHMM);
                    let durationInMinutes = endTimeInMinutes - startTimeInMinutes;
                    let chargeableAmount = (durationInMinutes / 60) * ratePerHour;
                    $('#serviceAmountChargeableBox').text('$' + chargeableAmount);
                    console.dir(schedule.dateOfLesson)
                    console.log(weekDayName);
                    $('#dayBox').html(weekDayName);

console.log(`${actualStartTimeHHMM} and ${actualEndTimeHHMM}`)                    
                    $actualStartTimeInputElement.wickedpicker(
                        'setTime', 0, actualStartTimeHHMM);
                    $actualEndTimeInputElement.wickedpicker(
                        'setTime', 0, actualEndTimeHHMM);

                    if (schedule.status === ""COMPLETED"") {
                        let actualStartTime12HrHHMM = minutesTo12HourHHMM(schedule.actualStartTimeInMinutes).toUpper");
                WriteLiteral(@"Case();
                        let actualEndTime12HrHHMM = minutesTo12HourHHMM(schedule.actualEndTimeInMinutes).toUpperCase();
                        if (actualStartTimeInMinutes < officialStartTimeInMinutes) {
                            $(""<span />"", { text: actualStartTime12HrHHMM, ""class"": ""positve-view"" }).insertAfter($actualStartTimeInputElement);
                            $actualStartTimeInputElement.hide();
                        } else if (actualStartTimeInMinutes > officialStartTimeInMinutes) {
                            $(""<span />"", { text: actualStartTime12HrHHMM, ""class"": ""negative-view"" }).insertAfter($actualStartTimeInputElement);
                            $actualStartTimeInputElement.hide();
                        } else {
                            $(""<span />"", { text: actualStartTime12HrHHMM, ""class"": ""view"" }).insertAfter($actualStartTimeInputElement);
                            $actualStartTimeInputElement.hide();
                        }

                       ");
                WriteLiteral(@" if (actualEndTimeInMinutes > officialEndTimeInMinutes) {
                            $(""<span />"", { text: actualEndTime12HrHHMM, ""class"": ""positive-view"" }).insertAfter($actualEndTimeInputElement);
                            $actualEndTimeInputElement.hide();
                        } else if (actualEndTimeInMinutes < officialEndTimeInMinutes) {
                            $(""<span />"", { text: actualEndTime12HrHHMM, ""class"": ""negative-view"" }).insertAfter($actualEndTimeInputElement);
                            $actualEndTimeInputElement.hide();
                        } else {
                            $(""<span />"", { text: actualEndTime12HrHHMM, ""class"": ""view"" }).insertAfter($actualEndTimeInputElement);
                            $actualEndTimeInputElement.hide();
                        }

                        let $lessonTypeNamesInputElement = $('#lessonTypeNamesInput');
                        $('<span />', { text: lessonTypeNames, ""class"": ""view"" }).insertAfter($lessonTypeNamesInp");
                WriteLiteral(@"utElement);
                        $lessonTypeNamesInputElement.attr('disabled', true);
                        //Display the signature
                        pad.fromDataURL('data:image / png; base64,' + schedule.signature);
                        //Disable any signature editing events
                        pad.off();
                        $('#saveButton').addClass('disabled');
                        $('#saveButton').text('Schedule record has been updated');
                }//if (schedule.status==='COMPLETED')
                    document.getElementById('isReplacementInstructorToggleBtn').checked = isReplacementInstructor;
                    if (isSystemCreated === true) {
                        document.getElementById('isReplacementInstructorToggleBtn').disabled = true;
                    }
                });

            }//loadTimeSheetSchedule


            //Override jquery validate plugin defaults to show validation status of input boxes
            $.validator.setDefaul");
                WriteLiteral(@"ts({
                highlight: function (element) {
                    $(element).closest('.form-group').removeClass('valid').addClass('error')
                    $(element).css('border', '2px solid red');
                },
                unhighlight: function (element) {
                    $(element).closest('.form-group').removeClass('error').addClass('valid');
                    $(element).css('border', '2px solid #2ab934'); //green border

                },
                errorElement: 'span',
                errorPlacement: function (error, element) {
                    if (element.parent('.input-group').length) {
                        error.insertAfter(element.parent());
                    } else {
                        error.insertAfter(element);
                    }
                }
            });




            //Set jquery validation rules
            $('#dataForm').validate({
                rules: {



                },
                messages: {");
                WriteLiteral(@"


                }
            });

            function dateToWeekDayName(inDate) {
                let weekDayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
                let date = new Date(inDate);
                return weekDayNames[date.getDay()];
            };

            function loadLessonTypeNames() {
                //https://stackoverflow.com/questions/21974649/jquery-when-then-also-when-done-not-waiting
                //Load the lesson type names from the backend.
                return jQuery.ajax({
                    type: 'GET',
                    url: '/API/LessonTypes/',
                }).done(function (data) {
                    console.dir('loadLessonTypeNames completed execution. The anonymous function inside done() is executed');
                    console.dir(data);
                    let $lessonTypeNamesInputElement = $('#lessonTypeNamesInput');
                    for (let index = 0; index < data.length; index+");
                WriteLiteral(@"+) {
                        if (data[index].isVisible === true) {
                            let $optionElement = $(`<option value=""${data[index].lessonTypeName}"">${data[index].lessonTypeName}</option>`);
                            console.dir($optionElement);
                            $lessonTypeNamesInputElement.append($optionElement);
                        }
                    }
                    $lessonTypeNamesInputElement.selectpicker();//Had to refer to the https://github.com/snapappointments/bootstrap-select to check how to initialize using JS
                })//end of jQuery.ajax(,,,).done(...)
            }


            //Create method to store webform data
            //Create method to store webform data
            function WebFormData(inTimeSheetScheduleId, inLessonTypeNames, inActualStartTimeInMinutes, inActualEndTimeInMinutes, inSignatureData) {

                this.timeSheetScheduleId = inTimeSheetScheduleId;

                this.lessonTypeNames = inLessonTypeN");
                WriteLiteral(@"ames;
                this.actualEndTimeInMinutes = inActualEndTimeInMinutes;
                this.actualStartTimeInMinutes = inActualStartTimeInMinutes
                this.signatureData = inSignatureData;
            }
            //Reference: https://dzone.com/articles/creating-a-signature-pad-using-canvas-and-aspnet-c
            //For developing signature pad a


            //Create method to submit form with POST API method
            $('#saveButton').on('click', function () {
                $('#dataForm').validate();
                if ($(""#dataForm"").valid()) {

                    let collectedLessonTypeNameList = $('#lessonTypeNamesInput').val();//Returns an array of strings
                    //If only one is selected, it is a string without comma seperator
                    //if non is selected, it is an empty string
                    //https://stackoverflow.com/questions/44324398/how-to-use-jquery-validate-plugin-for-bootstrap-select
                    //Refer to the di");
                WriteLiteral(@"scussion above to check out how to apply jQuery validator on the bootstrap-select widget
                    //You need to make changes to the library so that the validator does not ignore the hidden <select> element.
                    let collectedLessonTypeNames = collectedLessonTypeNameList.join(',');
                    let collectedActualStartTimeInMinutes = convertTimeToMinutes($('#actualStartTimeInput').val());
                    let collectedActualEndTimeInMinutes = convertTimeToMinutes($('#actualEndTimeInput').val());
                   
                    var collectedImage = pad.toDataURL(""image/png"");
                    collectedImage = collectedImage.replace('data:image/png;base64,', '');
                    pad.off();
                    var webFormData = new WebFormData(timeSheetScheduleId, collectedLessonTypeNames,
                        collectedActualStartTimeInMinutes, collectedActualEndTimeInMinutes, collectedImage);
                    console.dir(webFormData);

       ");
                WriteLiteral(@"            jQuery.ajax({
                                            type: 'PUT',
                       url: '/API/TimeSheets/UpdateTimeSheetSchedule/' ,
                                            contentType: 'application/x-www-form-urlencoded',
                                            dataType: 'json',
                                            data: webFormData
                                        }).done(function (data, textStatus, jqXHR) {
                                            new Noty({
                                                text: data.message,
                                                theme: 'metroui',
                                                layout: 'bottomRight',
                                                timeout: 1200,
                                                type: 'success'
                                            }).show();
                                            window.setTimeout(function () {
                                ");
                WriteLiteral(@"                window.location.reload();
                                            }, 2500);
                                      }).fail(function (data, textStatus, jqXHR) {
                                            console.log(textStatus);
                                            console.log(data);
                                            new Noty({
                                                text: data.responseJSON.message,
                                                theme: 'metroui',
                                                layout: 'bottomRight',
                                                timeout: 5000,
                                                type: 'error'
                                            }).show();
                                        });//end of jQuery.ajax().done().fail();
                                        
                }//end of if ($(""#dataForm"").valid()) {

            });//end of $('#saveButton').on('click', function () ");
                WriteLiteral(@"{

            //GENERAL FUNCTIONS----------------------------------------------------------------------------

            //Function to convert Time string to number of minutes from 12am
            function convertTimeToMinutes(time12h) {
                let [hours, colon, minutes, modifier] = time12h.split(' ');

                minutes = parseInt(minutes, 10);
                if (hours === '12') {
                    hours = '00';
                }
                if (modifier === 'PM') {
                    hours = parseInt(hours, 10) + 12;
                }

                return hours * 60 + minutes;
            }
            //Function to convert Minutes to Hours:Minutes
            function convertMinsToHrsMins(mins) {
                let h = Math.floor(mins / 60);
                let m = mins % 60;
                h = h < 10 ? '0' + h : h;
                m = m < 10 ? '0' + m : m;
                return `${h}:${m}`;
            }
            //Function to convert Minutes ");
                WriteLiteral(@"to Hours:Minutes AM/PM
            function minutesTo12HourHHMM(mins, twentyFour = false) {
                let h = Math.floor(mins / 60);
                let m = mins % 60;
                m = m < 10 ? '0' + m : m;

                if (twentyFour) {
                    h = h < 10 ? '0' + h : h;
                    return `${h}:${m}`;
                } else {
                    let a = 'am';
                    if (h >= 12) a = 'pm';
                    if (h > 12) h = h - 12;
                    return `${h}:${m} ${a}`;
                }
            }
        })(window, jQuery, moment);
    </script>
");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
